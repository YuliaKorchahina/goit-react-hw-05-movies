{"version":3,"file":"static/js/906.ec9c2812.chunk.js","mappings":"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","sources":["components/MovieInformation.jsx","pages/MovieDetails.jsx","servises/Api.js","servises/utils/utils.js","webpack://react-homework-template/./src/components/style.module.css?6fa0"],"sourcesContent":["\nimport { Link, Outlet } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst MovieInformation = ({movieId})=> {\n    return (\n    <>\n        <h3>More information</h3>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <Outlet />\n          <li>\n            <Link to={`/movies/${movieId}/review`}>Review</Link>\n          </li>\n        </ul>\n    </>\n    )\n};\nMovieInformation.propTypes={\n    movieId: PropTypes.string.isRequired\n}\n\n export default MovieInformation;","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { getMovieById } from 'servises/Api';\nimport imgUrl from 'servises/utils/utils';\nimport styled from '../components/style.module.css';\nimport MovieInformation from 'components/MovieInformation';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieById(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const goBack = () => navigate(-1);\n\n  const getReleaseDate = releaseDate => {\n    return releaseDate ? new Date(releaseDate).getFullYear() : 'No information';\n  };\n  const genres = movie ? movie.genres.map(genre => genre.name).join(', ') : '';\n\n  //   const poster_path = movie?.poster_path;\n  const { poster_path } = movie ?? '';\n  return (\n    <>\n      {movie && (\n        <>\n          <h2>\n            {movie.title} ({getReleaseDate(movie.release_date)})\n          </h2>\n          <ul>\n            <li>\n              <img src={imgUrl(poster_path)} alt={movie.title} width={300} />\n              <p>User Score: {movie.vote_average.toFixed(1)}</p>\n              <p>Overview</p>\n              <p>{movie.overview}</p>\n              <p>Genres: {genres}</p>\n            </li>\n          </ul>\n          <MovieInformation movieId={movieId}/>\n        </>\n      )}\n      <button onClick={goBack} className={styled.btn}>\n        Go back\n      </button>\n      {error && <p>Movie load fail</p>}\n    </>\n  );\n};\n\nMovieDetails.protoTypes = {\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  release_date: PropTypes.number.isRequired,\n  vote_average: PropTypes.number.isRequired,\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'af7806c242ad95763370aa39444155c5',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  try {\n    const { data } = await instance.get(`trending/all/day`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovie = async search => {\nconst {data} = await instance.get(`search/movie`, {\n  params: {\n    query: `${search}`,\n  }\n});\nreturn data;\n\n};\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\nexport const getMovieCastById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/credits`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviewById = async id => {\n  try {\n    const { data } = await instance.get(`/movie/${id}/reviews`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG = 'http://surl.li/fquko';\nconst imgUrl = poster_path => { \n  return poster_path ? BASE_IMG_URL + poster_path : DEFAULT_IMG;\n};\n\nexport default imgUrl;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"style_btn__-6CXS\",\"item\":\"style_item__MF55d\",\"list\":\"style_list__ExEtk\"};"],"names":["movieId","to","MovieDetails","useState","movie","setMovie","error","setError","useParams","navigate","useNavigate","useEffect","fetchMovie","getMovieById","result","releaseDate","genres","map","genre","name","join","poster_path","title","release_date","Date","getFullYear","src","imgUrl","alt","width","vote_average","toFixed","overview","onClick","className","styled","protoTypes","PropTypes","instance","axios","baseURL","params","api_key","getTrendingMovie","get","data","console","log","getSearchMovie","search","query","id","getMovieCastById","getMovieReviewById"],"sourceRoot":""}